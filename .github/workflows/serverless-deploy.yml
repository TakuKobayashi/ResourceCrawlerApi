on:
  push:
    branches:
    - master

name: serverless deploy
jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
        root-project-path: [./]
    steps:
    - uses: actions/checkout@v3
    - name: setup ubuntu
      run: sudo apt-get --quiet update --yes
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - name: Register .env
      working-directory: ${{ matrix.root-project-path }}
      env:
        TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
        TWITTER_BOT_ACCESS_TOKEN: ${{ secrets.TWITTER_BOT_ACCESS_TOKEN }}
        TWITTER_BOT_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_BOT_ACCESS_TOKEN_SECRET }}
        GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
        GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
        GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
        FLICKR_APIKEY: ${{ secrets.FLICKR_APIKEY }}
        FLICKR_SECRET: ${{ secrets.FLICKR_SECRET }}
      run: |
        echo "TWITTER_CONSUMER_KEY=${TWITTER_CONSUMER_KEY}" >> ./.env
        echo "TWITTER_CONSUMER_SECRET=${TWITTER_CONSUMER_SECRET}" >> ./.env
        echo "TWITTER_BOT_ACCESS_TOKEN=${TWITTER_BOT_ACCESS_TOKEN}" >> ./.env
        echo "TWITTER_BOT_ACCESS_TOKEN_SECRET=${TWITTER_BOT_ACCESS_TOKEN_SECRET}" >> ./.env
        echo "GOOGLE_API_KEY=${GOOGLE_API_KEY}" >> ./.env
        echo "GOOGLE_OAUTH_CLIENT_ID=${GOOGLE_OAUTH_CLIENT_ID}" >> ./.env
        echo "GOOGLE_OAUTH_CLIENT_SECRET=${GOOGLE_OAUTH_CLIENT_SECRET}" >> ./.env
        echo "FLICKR_APIKEY=${FLICKR_APIKEY}" >> ./.env
        echo "FLICKR_SECRET=${FLICKR_SECRET}" >> ./.env
    - name: yarn install
      working-directory: ${{ matrix.root-project-path }}
      run: yarn install
    - name: yarn serverless build package
      working-directory: ${{ matrix.root-project-path }}
      run: yarn run serverless package --package ./build
    - name: serverless deploy
      working-directory: ${{ matrix.root-project-path }}
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        yarn run serverless config credentials --provider aws --key ${AWS_ACCESS_KEY_ID} --secret ${AWS_SECRET_ACCESS_KEY}
        yarn run serverless deploy --stage production --package ./build